{"version":3,"sources":["serviceWorker.js","Components/QuestionCard.js","Components/Quiz.js","Components/WineTabs.js","Components/Chart.js","Components/TasteProfile.js","utils.js","Components/Home.js","Components/App.js","theme.js","index.js"],"names":["Boolean","window","location","hostname","match","QuestionCard","props","Zoom","in","timeout","Grid","item","onClick","handleSubmit","value","Card","CardActionArea","container","direction","justify","alignItems","className","alt","src","imageUrl","Typography","variant","food","Quiz","state","questions","currentQuestion","bind","incrementcurrentQuestion","incrementCurrentQuestion","handleKeyDown","db","collection","get","forEach","doc","push","data","shuffle","this","setState","prev","event","keyCode","val","currentQ","newResults","results","category","setResults","length","history","tabIndex","onKeyDown","Container","spacing","id","posImage","pos","negImage","neg","Component","withRouter","WineTabs","Tabs","onChange","tabHandler","selectedWine","indicatorColor","centered","Tab","label","tabLabel","Chart","polar","theme","VictoryTheme","material","height","width","colorScale","style","fillOpacity","domain","y","animate","duration","TasteProfile","maxima","acid","tannin","earth","fruit","oak","body","wines","flavor","Object","keys","map","key","x","grape","formattedData","formatResults","resultTerms","convertResultsToSentence","Button","color","fullWidth","App","exact","path","render","component","Home","createMuiTheme","palette","primary","main","typography","fontFamily","join","fire","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","ThemeProvider","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d74131e2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport {\n  Grid,\n  Card,\n  CardActionArea,\n  Typography,\n  Zoom,\n} from '@material-ui/core';\n\nconst QuestionCard = (props) => {\n  return (\n    <Zoom in={true} timeout={700}>\n      <Grid item onClick={() => props.handleSubmit(props.value)}>\n        <Card>\n          <CardActionArea>\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <div className=\"image-container\">\n                <img\n                  className=\"question-image\"\n                  alt=\"a food that corresponds to the current question\"\n                  src={process.env.PUBLIC_URL + '/' + props.imageUrl}\n                />\n              </div>\n              <Typography className=\"card-title\" variant=\"h4\">\n                {props.food}\n              </Typography>\n            </Grid>\n          </CardActionArea>\n        </Card>\n      </Grid>\n    </Zoom>\n  );\n};\n\nexport default QuestionCard;\n","import React, { Component } from 'react';\nimport { db } from '..';\nimport { Container, Grid, Typography } from '@material-ui/core';\nimport QuestionCard from './QuestionCard';\nimport shuffle from 'shuffle-array';\nimport { withRouter } from 'react-router-dom';\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [],\n      currentQuestion: 0,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.incrementcurrentQuestion = this.incrementCurrentQuestion.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n  // Fetches questions from firestore\n  async componentDidMount() {\n    let questions = [];\n    const snap = await db.collection('questions').get();\n    snap.forEach((doc) => questions.push(doc.data()));\n    questions = shuffle(questions);\n    this.setState({ questions });\n  }\n  // Moves the quiz to the next question\n  incrementCurrentQuestion() {\n    const prev = this.state.currentQuestion;\n    this.setState({ currentQuestion: prev + 1 });\n  }\n  // Enables use of arrow keys for quiz\n  handleKeyDown(event) {\n    if (event.keyCode === 37) {\n      this.handleSubmit('pos');\n    } else if (event.keyCode === 39) {\n      this.handleSubmit('neg');\n    }\n  }\n  // Updates results object, increments question, redirects to results\n  handleSubmit(val) {\n    const currentQ = this.state.questions[this.state.currentQuestion];\n    const newResults = { ...this.props.results };\n    newResults[currentQ.category] =\n      (val === 'pos' ? 1 : 0) + newResults[currentQ.category];\n    this.props.setResults(newResults);\n    if (this.state.currentQuestion < this.state.questions.length - 1) {\n      this.incrementCurrentQuestion();\n    } else {\n      this.props.history.push('/taste-profile');\n    }\n  }\n\n  render() {\n    const currentQ = this.state.questions[this.state.currentQuestion];\n    return this.state.questions.length ? (\n      <div tabIndex={0} onKeyDown={(event) => this.handleKeyDown(event)}>\n        <Container>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            spacing={5}\n            id=\"quiz\"\n          >\n            <QuestionCard\n              value=\"pos\"\n              imageUrl={currentQ.posImage}\n              handleSubmit={this.handleSubmit}\n              food={currentQ.pos}\n            />\n            <Grid item>\n              <QuestionCard\n                value=\"neg\"\n                imageUrl={currentQ.negImage}\n                handleSubmit={this.handleSubmit}\n                food={currentQ.neg}\n              />\n            </Grid>\n          </Grid>\n          <div id=\"quiz-footer\">\n            <Typography variant=\"h5\">\n              {this.state.currentQuestion + 1}/21\n            </Typography>\n          </div>\n        </Container>\n      </div>\n    ) : (\n      <div>Loading...</div>\n    );\n  }\n}\n\nexport default withRouter(Quiz);\n","import React from 'react';\nimport { Tabs, Tab } from '@material-ui/core';\n\nconst WineTabs = (props) => {\n  return (\n    <Tabs\n      onChange={props.tabHandler}\n      id=\"tabs\"\n      value={props.selectedWine}\n      indicatorColor=\"primary\"\n      centered\n    >\n      <Tab label={props.tabLabel('Riesling', 'Germany')} value=\"riesling\" />\n      <Tab\n        label={props.tabLabel('Sauvignon Blanc', 'Sancerre')}\n        value=\"sancerre\"\n      />\n      <Tab\n        label={props.tabLabel('Chardonnay', 'Napa Valley')}\n        value=\"chardonnay\"\n      />\n      <Tab\n        label={props.tabLabel('Cabernet Sauvignon', 'Napa Valley')}\n        value=\"napa-cab\"\n      />\n      <Tab label={props.tabLabel('Malbec', 'Argentina')} value=\"malbec\" />\n      <Tab\n        label={props.tabLabel('Pinot Noir', 'Burgundy')}\n        value=\"red-burgundy\"\n      />\n    </Tabs>\n  );\n};\n\nexport default WineTabs;\n","import React from 'react';\nimport {\n  VictoryChart,\n  VictoryTheme,\n  VictoryArea,\n  VictoryPolarAxis,\n  VictoryGroup,\n} from 'victory';\n\nconst Chart = (props) => {\n  return (\n    <div id=\"chart-container\">\n      <VictoryChart\n        polar\n        theme={VictoryTheme.material}\n        id=\"chart\"\n        height={400}\n        width={400}\n      >\n        <VictoryGroup\n          colorScale={['gold', 'dodgerblue']}\n          style={{\n            data: {\n              fillOpacity: 0.3,\n            },\n          }}\n          domain={{ y: [0, 1] }}\n        >\n          <VictoryArea data={props.data} animate={{ duration: 700 }} />\n          {props.selectedWine && (\n            <VictoryArea\n              data={props.selectedWine}\n              animate={{ duration: 700 }}\n            />\n          )}\n        </VictoryGroup>\n        <VictoryPolarAxis />\n      </VictoryChart>\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport { Container, Typography } from '@material-ui/core';\nimport WineTabs from './WineTabs';\nimport Chart from './Chart';\nimport { db } from '..';\nimport { convertResultsToSentence } from '../utils';\n\nclass TasteProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.maxima = {\n      acid: 5,\n      tannin: 5,\n      earth: 5,\n      fruit: 5,\n      oak: 3,\n      body: 3,\n    };\n    this.state = {\n      data: {},\n      selectedWine: null,\n      wines: {},\n    };\n    this.tabHandler = this.tabHandler.bind(this);\n  }\n\n  // Mutates results object to a structure that Victory chart can use\n  formatResults(results) {\n    results.fruit = results.flavor;\n    results.earth = 5 - results.flavor;\n    delete results.flavor;\n    return Object.keys(results).map((key) => {\n      return {\n        x: key,\n        y: results[key] / this.maxima[key],\n      };\n    });\n  }\n\n  // Updates state so the selected tab's wine is rendered on the chart\n  tabHandler(event, value) {\n    this.setState({ selectedWine: value });\n  }\n\n  // Makes a label for Material-UI Tab component\n  tabLabel(grape, location) {\n    return (\n      <div>\n        <Typography>{grape}</Typography>\n        <hr />\n        <Typography>{location}</Typography>\n      </div>\n    );\n  }\n\n  // Calls result format, fetches wines from firestore, updates state\n  async componentDidMount() {\n    const formattedData = this.formatResults(this.props.results);\n    const wines = {};\n    const snap = await db.collection('wines').get();\n    snap.forEach((doc) => (wines[doc.id] = doc.data()[doc.id]));\n    this.setState({\n      data: formattedData,\n      wines: wines,\n    });\n  }\n\n  render() {\n    let selectedWine = this.state.wines[this.state.selectedWine];\n    return this.state.data.length ? (\n      <Container>\n        <WineTabs\n          tabHandler={this.tabHandler}\n          tabLabel={this.tabLabel}\n          selectedWine={this.state.selectedWine}\n        />\n        <Chart data={this.state.data} selectedWine={selectedWine} />\n        <Typography variant=\"h5\" id=\"results-header\">\n          {convertResultsToSentence(this.props.results)}\n        </Typography>\n      </Container>\n    ) : (\n      <div>Loading</div>\n    );\n  }\n}\n\nexport default TasteProfile;\n","// This (verbose) function converts quiz results into a sentence about the user's taste profile.\nexport function convertResultsToSentence(results) {\n  const resultTerms = {};\n  switch (results.oak) {\n    case 0:\n      resultTerms.oak = 'no';\n      break;\n    case 1:\n      resultTerms.oak = 'minimal';\n      break;\n    case 2:\n      resultTerms.oak = 'some';\n      break;\n    case 3:\n      resultTerms.oak = 'plenty of';\n      break;\n    default:\n  }\n  switch (results.body) {\n    case 0:\n      resultTerms.body = 'light';\n      break;\n    case 1:\n      resultTerms.body = 'light';\n      break;\n    case 2:\n      resultTerms.body = 'medium';\n      break;\n    case 3:\n      resultTerms.body = 'full';\n      break;\n    default:\n  }\n  switch (results.acid) {\n    case 0:\n      resultTerms.acid = 'very low';\n      break;\n    case 1:\n      resultTerms.acid = 'low';\n      break;\n    case 2:\n      resultTerms.acid = 'medium-low';\n      break;\n    case 3:\n      resultTerms.acid = 'medium';\n      break;\n    case 4:\n      resultTerms.acid = 'medium-high';\n      break;\n    case 5:\n      resultTerms.acid = 'high';\n      break;\n    default:\n  }\n  switch (results.tannin) {\n    case 0:\n      resultTerms.tannin = 'very low';\n      break;\n    case 1:\n      resultTerms.tannin = 'low';\n      break;\n    case 2:\n      resultTerms.tannin = 'medium-low';\n      break;\n    case 3:\n      resultTerms.tannin = 'medium';\n      break;\n    case 4:\n      resultTerms.tannin = 'medium-high';\n      break;\n    case 5:\n      resultTerms.tannin = 'high';\n      break;\n    default:\n  }\n  resultTerms.flavor = results.fruit > results.earth ? 'fruit' : 'earth';\n  return `You like ${resultTerms.flavor}-driven, ${resultTerms.body}-bodied wines with ${resultTerms.acid} acid, ${resultTerms.tannin} tannin, and ${resultTerms.oak} oak influence!`;\n}\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\n\nconst Home = (props) => {\n  return (\n    <div id=\"home\">\n      <h1 id=\"home-header\">Welcome to Cuvee!</h1>\n      <p id=\"home-content\">\n        Let's face it: Unless you're a sommelier, ordering wine in a restaurant\n        can be daunting. That's where Cuvee comes in. Our short, simple quiz\n        will give you a custom taste profile so you'll know exactly what kind of\n        wine you like, and how to order it!\n      </p>\n      <Button\n        id=\"quiz-button\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => props.history.push('/quiz')}\n        fullWidth={false}\n      >\n        Take the Quiz!\n      </Button>\n    </div>\n  );\n};\n\nexport default withRouter(Home);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport 'firebase/firestore';\nimport Quiz from './Quiz';\nimport TasteProfile from './TasteProfile';\nimport Home from './Home';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      results: {\n        acid: 0,\n        tannin: 0,\n        body: 0,\n        oak: 0,\n        flavor: 0,\n      },\n    };\n    this.setResults = this.setResults.bind(this);\n  }\n\n  setResults(results) {\n    this.setState({ results: results });\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"header\">\n          <h2 id=\"logo\">cuvee</h2>\n          <h3 className=\"nav-item\">Wine Palate Generator</h3>\n        </div>\n        <Router>\n          <Switch>\n            <Route\n              exact\n              path=\"/quiz\"\n              render={() => (\n                <Quiz\n                  setResults={this.setResults}\n                  results={this.state.results}\n                />\n              )}\n            />\n            <Route\n              path=\"/taste-profile\"\n              render={() => <TasteProfile results={this.state.results} />}\n            />\n            <Route path=\"/\" component={Home} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n// This defines the default styles for Material-UI\nexport default createMuiTheme({\n  palette: {\n    primary: { main: '#FFC0CB' },\n  },\n  typography: {\n    fontFamily: ['Raleway', 'sans-serif'].join(','),\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './Components/App';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\nconst config = {\n  apiKey: 'AIzaSyBSKB5Vhb4YtKFnEx-_Nep7ST9rRZwfK5k',\n  authDomain: 'cuvee-taste-generator.firebaseapp.com',\n  databaseURL: 'https://cuvee-taste-generator.firebaseio.com',\n  projectId: 'cuvee-taste-generator',\n  storageBucket: 'cuvee-taste-generator.appspot.com',\n  messagingSenderId: '585829094239',\n  appId: '1:585829094239:web:88e7871387dc80be8fdcea',\n  measurementId: 'G-MN0TGKPTYE',\n};\n\nexport const fire = firebase.initializeApp(config);\n\nexport const db = firebase.firestore();\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {' '}\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}